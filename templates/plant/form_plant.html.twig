{% extends "base.html.twig" %}
{% block body %}
    {{ form_start(formPlant) }}

    <div class="form-group">
        {{ form_row(formPlant.name, {'attr': {'class': 'form-control', 'autofocus': true}}) }}
    </div>
    <div class="form-group">
         {{ form_row(formPlant.latinName, {'attr': {'class': 'form-control', 'autofocus': false}}) }}
    </div>
    <div class="form-group">
        {{ form_row(formPlant.picturePath, {'attr': {'class': 'form-control', 'autofocus': false }}) }}
    </div>
    <div class="form-group">
        {{ form_row(formPlant.plantFamily, {'attr': {'class': 'form-control', 'autofocus': false }}) }}
    </div>
    <div class="form-group">
        {{ form_row(formPlant.waterFrequency, {'attr': {'class': 'form-control', 'autofocus': false }}) }}
    </div>
    <br>
    <h3>Type de sol préféré</h3>
    <hr>
    <div class="form-group" id="preferedSoilTypes">
            <div class="preferedSoilTypes" data-prototype="{{ form_widget(formPlant.preferedSoilTypes.vars.prototype)|e('html_attr') }}">
            </div>
    </div>
    <br>
    <h3>Type d'engrais préféré</h3>
    <hr>
    <div class="form-group" id="preferedFertilizerTypes">
        <div class="preferedFertilizerTypes" data-prototype="{{ form_widget(formPlant.preferedFertilizerTypes.vars.prototype)|e('html_attr') }}">
        </div>
    </div>
    <br>
    <h3>Type d'ensolleiment préféré</h3>
    <hr>
    <div class="form-group" id="preferedSunExposureTypes">
        <div class="preferedSunExposureTypes" data-prototype="{{ form_widget(formPlant.preferedSunExposureTypes.vars.prototype)|e('html_attr') }}">
        </div>
    </div>
    <br>
    <h3>Cycle de vie</h3>
    <hr>
    <div class="form-group" id="lifeCycleSteps">
        <div class="lifeCycleSteps" data-prototype="{{ form_widget(formPlant.lifeCycleSteps.vars.prototype)|e('html_attr') }}">
        </div>
    </div>


    {{ form_rest(formPlant) }}
    {{ form_end(formPlant) }}
{% endblock %}

{% block stylesheets %}
<style>
    button:disabled{
        cursor: not-allowed;
    }
</style>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript" src="{{ asset('assets/js/formUtil.js') }}" role="form-util"></script>
    <script type="text/javascript">

        const SOIL_TYPE_CLASS_NAME = "preferedSoilTypes";
        const FERTILIZER_TYPE_CLASS_NAME = "preferedFertilizerTypes";
        const SUN_EXPOSURE_TYPE_CLASS_NAME = "preferedSunExposureTypes";
        const LIFE_CYCLE_STEPS_CLASS_NAME = "lifeCycleSteps";

        const SOIL_OBJECT_NAME = "Soil";
        const FERTILIZER_OBJECT_NAME = "Fertilizer";
        const SUN_EXPOSURE_OBJECT_NAME = "SunExposure";
        const LIFE_CYCLE_STEP_OBJECT_NAME = "LifeCycleStep";


        let addPlantSoilTypeButton = $('<button type="button" class="add_plant_soil_type">Ajouter un type de sol</button>').addClass('btn btn-success btn-sm');
        $('#preferedSoilTypes').append(addPlantSoilTypeButton);

        let addPlantFertilizerTypeButton = $('<button type="button" class="add_plant_fertilizer_type">Ajouter un type d\'engrais</button>').addClass('btn btn-success btn-sm');
        $('#preferedFertilizerTypes').append(addPlantFertilizerTypeButton);

        let addPlantSunExposureTypeButton = $('<button type="button" class="add_plant_sun_exposure_type">Ajouter un type d\'ensoleillement </button>').addClass('btn btn-success btn-sm');
        $('#preferedSunExposureTypes').append(addPlantSunExposureTypeButton);

        let addPlantLifeCycleStepsButton = $('<button type="button" class="add_plant_life_cycle_steps">Ajouter une étape de cycle de vie </button>').addClass('btn btn-success btn-sm');
        $('#lifeCycleSteps').append(addPlantLifeCycleStepsButton);


        let newSoilLi = $('.preferedSoilTypes');
        let newFertilizerLi = $('.preferedFertilizerTypes');
        let newSunExposureLi = $('.preferedSunExposureTypes');
        let newLifeCycleStepsLi = $('.lifeCycleSteps');

        let plantSoilTypeCollectionHolder = initCollection(newSoilLi, SOIL_TYPE_CLASS_NAME);
        let plantFertilizerTypeCollectionHolder = initCollection(newFertilizerLi, FERTILIZER_TYPE_CLASS_NAME);
        let plantSunExposureTypeCollectionHolder = initCollection(newSunExposureLi, SUN_EXPOSURE_TYPE_CLASS_NAME);
        let plantLifeCycleStepsCollectionHolder = initCollection(newLifeCycleStepsLi, LIFE_CYCLE_STEPS_CLASS_NAME);

        $(document).ready(function() {
            setClickListenersOnAddButtons();
            setFormsAtInit();
        });

        function initCollection(newLinkLi, ulClassName) {

            let collection = $('div.' + ulClassName);

            collection.append(newLinkLi);

            //items counter
            collection.data('index', collection.find(':input').length);

            return collection;
        }

        function setFormsAtInit() {
            addForm(
                plantSoilTypeCollectionHolder,
                newSoilLi,
                SOIL_OBJECT_NAME,
                SOIL_TYPE_CLASS_NAME,
                ['efficiency']
            );

            addForm(
                plantFertilizerTypeCollectionHolder,
                newFertilizerLi,
                FERTILIZER_OBJECT_NAME,
                FERTILIZER_TYPE_CLASS_NAME,
                ['efficiency', 'nbDayBeforeFertilizing']
            );

            addForm(
                plantSunExposureTypeCollectionHolder,
                newSunExposureLi,
                SUN_EXPOSURE_OBJECT_NAME,
                SUN_EXPOSURE_TYPE_CLASS_NAME,
                ['efficiency']
            );
            addForm(
                plantLifeCycleStepsCollectionHolder,
                newLifeCycleStepsLi,
                LIFE_CYCLE_STEP_OBJECT_NAME,
                LIFE_CYCLE_STEPS_CLASS_NAME,
                ['stepDaysDuration', 'order']
            );
            fillOrderFieldLifeCycleStep();

        }
        function setClickListenersOnAddButtons() {
            addPlantSoilTypeButton.on('click', function(e) {
                addForm(
                    plantSoilTypeCollectionHolder,
                    newSoilLi,
                    SOIL_OBJECT_NAME,
                    SOIL_TYPE_CLASS_NAME,
                    ['efficiency']
                );

                disableIfMaxInputIsReach(plantSoilTypeCollectionHolder, 6, 'add_plant_soil_type');
            });

            addPlantFertilizerTypeButton.on('click', function(e) {
                addForm(
                    plantFertilizerTypeCollectionHolder,
                    newFertilizerLi,
                    FERTILIZER_OBJECT_NAME,
                    FERTILIZER_TYPE_CLASS_NAME,
                    ['efficiency', 'nbDayBeforeFertilizing']
                );

                disableIfMaxInputIsReach(plantFertilizerTypeCollectionHolder, 6, 'add_plant_fertilizer_type');
            });

            addPlantSunExposureTypeButton.on('click', function(e) {
                addForm(
                    plantSunExposureTypeCollectionHolder,
                    newSunExposureLi,
                    SUN_EXPOSURE_OBJECT_NAME,
                    SUN_EXPOSURE_TYPE_CLASS_NAME,
                    ['efficiency']
                );

                disableIfMaxInputIsReach(plantSunExposureTypeCollectionHolder, 3, 'add_plant_sun_exposure_type');
            });
            addPlantLifeCycleStepsButton.on('click', function(e) {
                addForm(
                    plantLifeCycleStepsCollectionHolder,
                    newLifeCycleStepsLi,
                    LIFE_CYCLE_STEP_OBJECT_NAME,
                    LIFE_CYCLE_STEPS_CLASS_NAME,
                    ['stepDaysDuration', 'order']
                );

                disableIfMaxInputIsReach(plantLifeCycleStepsCollectionHolder, 6, 'add_plant_life_cycle_steps');
                fillOrderFieldLifeCycleStep();
            });
        }

        function addForm(CollectionHolder, newLinkLi, objectName, ulClassName, fieldNameArrayForIntegerValidator) {
            // Get the data-prototype
            let prototype = CollectionHolder.data('prototype');

            let index = CollectionHolder.data('index');

            let newForm = "";

            newForm += prototype;
            newForm = newForm.replace(/__name__label__/g, index);
            newForm = newForm.replace(/__name__/g, index);

            // Display the form in the page, before the addButton
            let $newLinkLi = $('.' + ulClassName).append(newForm);
            newLinkLi.before($newLinkLi);

            if(index !== 0) {
                addDeleteButton(objectName, ulClassName, index);
                addClickListenerOnDeleteButton(CollectionHolder, objectName, ulClassName, index);
            }

            // Validators
            for(let fieldName of fieldNameArrayForIntegerValidator){
                addInputIntegerValidator(ulClassName, fieldName, index);
            }

            addStyle(objectName, ulClassName, index);

            // increase the index with one for the next item
            CollectionHolder.data('index', index + 1);
        }

        function addDeleteButton(objectName, ulClassName, index) {
            //setup "remove" button
            let deleteButton =
                "<div class='col-3 d-flex align-items-end'>" +
                "<button class='btn btn-danger btn-sm' id='deleteNewPlant_objectName_TypeButton_id_'>" +
                "<span class='fa fa-times'></span>" +
                "</button>" +
                "</div>";

            deleteButton = deleteButton.replace(/_objectName_/g, objectName);
            deleteButton = deleteButton.replace(/id_/g, index);

            let removeButton = $(deleteButton);
            // console.log(document.getElementById());
            $('#plant_' + ulClassName + '_' + index).append(removeButton);

        }
        function addClickListenerOnDeleteButton(collectionHolder, itemName, ulClass, index) {
            $('#deleteNewPlant' + itemName + 'TypeButton_' + index).on('click', function(e) {
                $('#plant_' + ulClass + '_' + index).remove();

                collectionHolder.data('index', collectionHolder.data('index') - 1);

                enableIfMaxInputIsNotReach(plantSoilTypeCollectionHolder, 6, 'add_plant_soil_type');
                enableIfMaxInputIsNotReach(plantFertilizerTypeCollectionHolder, 6, 'add_plant_fertilizer_type');
                enableIfMaxInputIsNotReach(plantSunExposureTypeCollectionHolder, 3, 'add_plant_sun_exposure_type');
                enableIfMaxInputIsNotReach(plantLifeCycleStepsCollectionHolder, 6, 'add_plant_life_cycle_steps');
            })
        }

        function disableIfMaxInputIsReach(CollectionHolder, nbMaxInputs, buttonClassName){
            console.log('disabled index: ', CollectionHolder.data('index'));
            console.log('disabled: ', CollectionHolder.data('index') >= nbMaxInputs);
            if(CollectionHolder.data('index') >= nbMaxInputs){
                document.getElementsByClassName(buttonClassName)[0].disabled = true;
            }
        }
        function enableIfMaxInputIsNotReach(CollectionHolder, nbMaxInputs, buttonClassName){
            console.log('enable index: ', CollectionHolder.data('index'));
            console.log('enable: ', CollectionHolder.data('index') < nbMaxInputs);
            if(CollectionHolder.data('index') < nbMaxInputs){
                document.getElementsByClassName(buttonClassName)[0].disabled = false;
            }
        }

        function addInputIntegerValidator(ulClassName, fieldName, index) {
            let field = document.getElementById('plant_' + ulClassName + '_' + index + '_' + fieldName);
            bindInputIntegerValidation(
                field,
                ['change'],
                parseInt(field.getAttribute('min')),
                parseInt(field.getAttribute('max'))
            );
        }

        function fillOrderFieldLifeCycleStep(){

            console.log('plant_' + LIFE_CYCLE_STEPS_CLASS_NAME + '_' + plantLifeCycleStepsCollectionHolder.data('index') - 1 + '_order');
            let field = document.getElementById('plant_' + LIFE_CYCLE_STEPS_CLASS_NAME + '_' + (plantLifeCycleStepsCollectionHolder.data('index') - 1) + '_order');

            field.value = plantLifeCycleStepsCollectionHolder.data('index');
            field.disabled = true;
        }

        function addStyle(objectName, ulClassName, index) {
            const row = $('#plant_' + ulClassName + '_' + index);
            row.addClass('row mb-3');
            row.children().addClass('col-3');
        }
    </script>
{% endblock %}